// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/bundle/kube_version.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKubeVersionClient is a mock of KubeVersionClient interface.
type MockKubeVersionClient struct {
	ctrl     *gomock.Controller
	recorder *MockKubeVersionClientMockRecorder
}

// MockKubeVersionClientMockRecorder is the mock recorder for MockKubeVersionClient.
type MockKubeVersionClientMockRecorder struct {
	mock *MockKubeVersionClient
}

// NewMockKubeVersionClient creates a new mock instance.
func NewMockKubeVersionClient(ctrl *gomock.Controller) *MockKubeVersionClient {
	mock := &MockKubeVersionClient{ctrl: ctrl}
	mock.recorder = &MockKubeVersionClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKubeVersionClient) EXPECT() *MockKubeVersionClientMockRecorder {
	return m.recorder
}

// ApiVersion mocks base method.
func (m *MockKubeVersionClient) ApiVersion() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ApiVersion")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ApiVersion indicates an expected call of ApiVersion.
func (mr *MockKubeVersionClientMockRecorder) ApiVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApiVersion", reflect.TypeOf((*MockKubeVersionClient)(nil).ApiVersion))
}
